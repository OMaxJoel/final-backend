spring.application.name=apiGmao

# Configuration de la racine de l'API
#server.servlet.context-path=/gmao

# Configuration de la connexion à la base de données MySQL
spring.datasource.url=jdbc:mariadb://localhost:3309/gmao
spring.datasource.username=root
spring.datasource.password=root

# Dialecte spécifique à MySQL
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Affichage des requêtes SQL dans la console (optionnel)
spring.jpa.show-sql=true

# Création automatique de la base de données et des tables au démarrage de l'application (attention en production)
spring.jpa.hibernate.ddl-auto=update

# Configuration du port du serveur
server.port=9090

spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=gmao
spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=gmao.api.Equipement.Domain,java.util,java.lang


spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

